* Base de datos meteoros (definitivo)						
+ Press C-c C-x C-c for full view. Press q in highlighted text to return to normal
+ Press C-x spc for selecting a rectangle						
| ID |      Fecha | Got RINEX | Got Kp index | Got GLM data | T_0 (GLM-16) | T_0 (GLM-17) | dt (GLM-16) | dt (GLM-17) |    dt |   s_dt | Latitud (GLM-16) | Latitud (GLM-17) | Longitud (GLM-16) | Longitud (GLM-17) | Latitud | Longitud | sig_latitude | sig_lon |
|----+------------+-----------+--------------+--------------+--------------+--------------+-------------+-------------+-------+--------+------------------+------------------+-------------------+-------------------+---------+----------+--------------+---------|
| 01 | 2019-05-23 | **        | **           |              | 16:36:18.147 | 16:36:18.155 |       0.197 |       0.197 | 0.197 | 0.0000 |             24.3 |             24.3 |            -102.2 |            -101.0 |   24.30 |  -101.60 |        0.000 |   0.849 |
| 02 | 2019-07-18 | **        | **           |              | 14:30:30.131 | 14:30:30:131 |       0.058 |       0.058 | 0.058 | 0.0000 |             27.2 |             27.2 |            -103.7 |            -102.6 |   27.20 |  -103.15 |        0.000 |   0.778 |
| 03 | 2019-08-10 | **        | **           |              | 11:18:48.726 | 11:18:48.632 |       0.145 |       0.252 | 0.199 | 0.0757 |             21.5 |             21.5 |            -103.1 |            -101.9 |   21.50 |  -102.50 |        0.000 |   0.849 |
| 04 | 2019-10-03 |           | **           |              | 07:55:33.551 | 07:55:33.550 |       0.085 |       0.127 | 0.106 | 0.0297 |             25.6 |             25.7 |             -96.8 |             -95.7 |   25.65 |   -96.25 |        0.071 |   0.778 |
| 05 | 2019-10-09 |           | **           |              | 06:08:11.205 | 06:08:11.206 |       0.108 |       0.097 | 0.103 | 0.0078 |             23.6 |             23.6 |            -112.1 |            -111.8 |   23.60 |  -111.95 |        0.000 |   0.212 |
| 06 | 2019-10-12 |           | **           |              | 11:12:27.296 |          N/A |       0.006 |         N/A | 0.006 | 0.0000 |             28.8 |              N/A |            -111.3 |               N/A |    28.8 |   -111.3 |        0.000 |   0.000 |
| 07 | 2019-11-16 |           | **           |              | 10:14:13.554 | 10:14:13.656 |       0.102 |       0.103 | 0.103 | 0.0007 |             29.2 |             29.2 |            -103.3 |            -102.0 |   29.20 |  -102.65 |        0.000 |   0.919 |
| 08 | 2019-11-17 |           | **           |              | 15:36:01.594 | 15:36:01.584 |       0.113 |       0.118 | 0.116 | 0.0035 |             31.7 |             31.7 |            -118.5 |            -116.9 |   31.70 |  -117.70 |        0.000 |   1.131 |
| 09 | 2019-11-19 | **        | **           |              | 07:57:40.100 | 07:57:40.118 |       0.177 |       0.016 | 0.097 | 0.1138 |             20.0 |             20.0 |             -89.2 |             -87.6 |   20.00 |   -88.40 |        0.000 |   1.131 |
| 10 | 2019-11-26 |           | **           |              | 13:23:20.453 | 13:23:20.437 |       0.098 |       0.057 | 0.078 | 0.0290 |             23.9 |             23.9 |            -109.3 |            -108.1 |   23.90 |  -108.70 |        0.000 |   0.849 |
| 11 | 2019-12-04 | **        | **           |              | 09:42:54.880 | 09:42:54.877 |       0.171 |       0.175 | 0.173 | 0.0028 |             31.5 |             31.5 |            -114.3 |            -113.0 |   31.50 |  -113.65 |        0.000 |   0.919 |
| 12 | 2019-12-15 |           | **           |              | 14:50:49.779 | 14:50:49.915 |       0.136 |       0.117 | 0.127 | 0.0134 |             27.7 |             27.7 |            -114.7 |            -113.5 |   27.70 |  -114.10 |        0.000 |   0.849 |
| 13 | 2019-12-29 |           | **           |              | 16:16:35.527 | 16:16:35.598 |       0.071 |       0.052 | 0.062 | 0.0134 |             29.6 |             29.6 |            -117.0 |            -115.7 |   29.60 |  -116.35 |        0.000 |   0.919 |
| 14 | 2020-01-03 |           | **           |              | 14:10:17.704 | 14:10:17.584 |       0.119 |       0.107 | 0.113 | 0.0085 |             30.2 |             30.2 |            -118.3 |            -117.0 |   30.20 |  -117.65 |        0.000 |   0.919 |
| 15 | 2020-01-06 |           | **           |              | 16:39:27.920 | 16:39:27.917 |       0.115 |       0.121 | 0.118 | 0.0042 |             31.4 |             31.4 |            -108.9 |            -107.5 |   31.40 |  -108.20 |        0.000 |   0.990 |
| 16 | 2020-01-15 |           | **           |              | 15:00:33.695 | 15:00:34.003 |       0.308 |       0.117 | 0.213 | 0.1351 |             19.4 |             19.5 |             -96.2 |             -94.9 |   19.45 |   -95.55 |        0.071 |   0.919 |
| 17 | 2020-02-12 |           | **           |              | 09:25:40.508 | 09:25:40.490 |       0.194 |       0.226 | 0.210 | 0.0226 |             18.9 |             18.9 |             -94.1 |             -92.9 |   18.90 |   -93.50 |        0.000 |   0.849 |
| 18 | 2020-03-03 |           | **           |              | 12:33:27.284 | 12:33:27.282 |       0.062 |       0.061 | 0.062 | 0.0007 |             18.2 |             18.3 |            -106.8 |            -105.9 |   18.25 |  -106.35 |        0.071 |   0.636 |
| 19 | 2020-03-31 |           | **           |              | 19:31:52.080 | 19:31:52.103 |       0.145 |       0.064 | 0.105 | 0.0573 |             28.5 |             28.4 |            -112.5 |            -111.6 |   28.45 |  -112.05 |        0.071 |   0.636 |
| 20 | 2020-04-08 |           | **           |              | 16:25:28.094 | 16:25:28.182 |       0.185 |       0.054 | 0.120 | 0.0926 |             26.1 |             26.1 |             -94.5 |             -93.3 |   26.10 |   -93.90 |        0.000 |   0.849 |
| 21 | 2020-04-18 |           | **           |              | 17:43:25.270 | 17:43:25.268 |       0.146 |       0.131 | 0.139 | 0.0106 |             29.0 |             29.0 |            -107.2 |            -105.9 |   29.00 |  -106.55 |        0.000 |   0.919 |
| 22 | 2020-04-20 |           | **           |              | 16:05:22.001 | 16:05:22:191 |       0.435 |       0.201 | 0.318 | 0.1655 |             28.1 |             28.2 |             -98.6 |             -97.1 |   28.15 |   -97.85 |        0.071 |   1.061 |
| 23 | 2020-04-25 | **        | **           |              | 11:03:09.626 | 11:03:09.530 |       0.265 |       0.380 | 0.323 | 0.0813 |             32.1 |             32.2 |            -112.4 |            -110.8 |   32.15 |  -111.60 |        0.071 |   1.131 |
| 24 | 2020-04-28 | **        | **           | **           | 05:43:16.682 | 05:43:16.676 |       0.801 |       0.818 | 0.810 | 0.0120 |             19.9 |             19.9 |            -110.2 |            -110.0 |   19.90 |  -110.10 |        0.000 |   0.141 |
| 25 | 2020-05-08 |           | **           |              | 10:06:16.988 | 10:06:16.942 |       0.437 |       0.543 | 0.490 | 0.0750 |             21.6 |             21.6 |             -93.0 |             -91.8 |   21.60 |   -92.40 |        0.000 |   0.849 |
| 26 | 2020-07-15 |           | **           |              | 19:58:28.112 | 19:58:28.173 |       0.728 |       0.658 | 0.693 | 0.0495 |             24.0 |             24.0 |            -108.7 |            -108.0 |   24.00 |  -108.35 |        0.000 |   0.495 |
| 27 | 2020-08-07 |           | **           |              | 13:29:57.252 | 13:29:57:071 |       0.167 |       0.159 | 0.163 | 0.0057 |             28.8 |             28.8 |            -106.7 |            -105.4 |   28.80 |  -106.05 |        0.000 |   0.919 |
| 28 | 2020-09-13 | **        | **           |              | 16:41:59.056 | 16:41.59.051 |       0.178 |       0.189 | 0.184 | 0.0078 |             28.4 |             28.5 |            -114.4 |            -113.1 |   28.45 |  -113.75 |        0.071 |   0.919 |
| 29 | 2020-09-30 |           | **           |              | 12:28:11.755 | 12:28:11.748 |       0.094 |       0.105 | 0.100 | 0.0078 |             24.9 |             24.9 |            -111.5 |            -110.3 |   24.90 |  -110.90 |        0.000 |   0.849 |
| 30 | 2020-11-16 | **        | **           | **           | 09:36:04.204 | 09:36:04.187 |       0.386 |       0.405 | 0.396 | 0.0134 |             20.3 |             20.3 |            -101.2 |             -99.9 |   20.30 |  -100.55 |        0.000 |   0.919 |
| 31 | 2020-11-17 |           | **           |              | 12:53:41.826 | 12:53:41.816 |       0.385 |       0.422 | 0.404 | 0.0262 |             23.0 |             23.0 |            -103.1 |            -101.8 |   23.00 |  -102.45 |        0.000 |   0.919 |
| 32 | 2020-12-19 |           | **           |              | 10:18:14.250 | 10:18:14.614 |       0.328 |       0.485 | 0.407 | 0.1110 |             21.9 |             22.0 |            -102.3 |            -100.9 |   21.95 |  -101.60 |        0.071 |   0.990 |
| 33 | 2020-12-23 | **        | **           |              | 09:43:01.374 | 09:43:01.375 |       0.147 |       0.149 | 0.148 | 0.0014 |             25.8 |             25.7 |            -111.8 |            -110.7 |   25.75 |  -111.25 |        0.071 |   0.778 |
| 34 | 2020-12-29 |           | **           |              | 15:20:54.399 | 15:20:54.282 |       0.117 |       0.119 | 0.118 | 0.0014 |             16.8 |             16.8 |            -102.7 |            -101.7 |   16.80 |  -102.20 |        0.000 |   0.707 |
| 35 | 2021-03-31 |           |              |              | 09:01:17.547 | 09:01:17.978 |       0.971 |       0.535 | 0.753 | 0.3083 |             20.1 |             20.2 |             -93.1 |             -92.8 |   20.15 |   -92.95 |        0.071 |   0.212 |
#+TBLFM: $10=vmean($8..$9);f3::$11=vsdev($8..$9);f4::$16=vmean($12..$13);f2::$17=vmean($14..$15);f2::$18=vsdev($12..$13);f3::$19=vsdev($14..$15);f3

* Base de datos de estaciones de GPS
+ Press C-c C-x C-c for full view. Press q in highlighted text to return to normal
| Site               | Latitude | Longitude |
|--------------------+----------+-----------|
| Angel de la Guarda |    29.17 |   -113.32 |
| Arrecife Alacranes |    22.49 |    -89.70 |
| Cayo Arcas         |    20.20 |    -91.96 |
| CN24               |    19.58 |    -88.05 |
| CN25               |    16.23 |    -92.14 |
| CNC0               |    21.17 |    -86.82 |
| Coalcoman          |    18.78 |   -103.16 |
| COJB               |    19.52 |   -103.57 |
| COLS               |    19.49 |   -103.62 |
| COLW               |    19.52 |   -103.64 |
| COOB               |    19.38 |   -103.67 |
| COPE               |    19.53 |   -103.61 |
| COPN               |    19.53 |   -103.62 |
| FERN               |    35.34 |   -112.45 |
| GUAX               |    28.88 |   -118.29 |
| Infiernillo        |    18.27 |   -101.90 |
| KVTX               |    27.55 |    -97.89 |
| Maria Madre        |    21.62 |   -106.57 |
| MARO               |    17.09 |    -94.88 |
| MOGA               |    19.65 |   -101.23 |
| Nogales            |    31.30 |   -110.96 |
| Nueva Italia       |    19.02 |   -102.09 |
| OXEC               |    16.52 |    -96.05 |
| OXGU               |    16.63 |    -96.91 |
| OXLP               |    16.14 |    -97.05 |
| OXMA               |    16.71 |    -98.61 |
| OXPE               |    15.89 |    -97.08 |
| OXPL               |    16.99 |    -97.93 |
| OXTE               |    15.83 |    -96.70 |
| OXTH               |    16.29 |    -95.24 |
| OXTP               |    17.63 |    -98.45 |
| OXTU               |    16.15 |    -97.65 |
| OXUM               |    15.67 |    -96.49 |
| P001               |    31.95 |   -112.80 |
| P008               |    36.15 |   -109.52 |
| P011               |    36.15 |   -109.52 |
| P014               |    31.97 |   -111.10 |
| P015               |    34.26 |   -110.01 |
| P026               |    32.66 |   -107.19 |
| P107               |    35.13 |   -107.88 |
| PALX               |    31.56 |   -116.06 |
| PENA               |    19.39 |   -104.10 |
| PHJX               |    32.49 |   -115.55 |
| PJZX               |    32.42 |   -115.88 |
| PLPX               |    31.59 |   -115.15 |
| PLTX               |    31.82 |   -115.43 |
| POAL               |    19.12 |    -98.65 |
| PSTX               |    31.31 |   -115.84 |
| PTAX               |    32.38 |   -115.46 |
| PTEX               |    32.29 |   -116.52 |
| PURI               |    19.67 |   -104.64 |
| PZUL               |    20.06 |   -105.51 |
| Socorro            |    18.77 |   -110.93 |
| TECO               |    18.98 |   -103.86 |
| TGMX               |    20.87 |    -86.87 |
| TNAL               |    19.12 |    -98.66 |
| TNAM               |    20.54 |   -103.97 |
| TNAT               |    18.13 |    -98.04 |
| TNCM               |    19.50 |   -105.04 |
| TNCU               |    28.45 |   -106.79 |
| TNHM               |    29.08 |   -110.97 |
| TNLC               |    19.51 |   -104.55 |
| TNMR               |    18.29 |   -103.35 |
| TNMS               |    20.53 |   -104.80 |
| TNMT               |    19.59 |   -104.27 |
| TNNX               |    17.41 |    -97.22 |
| TNPJ               |    15.70 |    -93.22 |
| TNPP               |    31.34 |   -113.63 |
| TNTB               |    25.61 |   -109.05 |
| TNTM               |    19.24 |   -104.79 |
| TNTS               |    27.85 |   -109.40 |
| UAGU               |    21.92 |   -102.31 |
| UCOC               |    18.91 |    -98.93 |
| UCOE               |    19.81 |   -101.69 |
| UCOL               |    19.12 |   -104.40 |
| UGEO               |    20.69 |   -103.35 |
| UIGF               |    19.33 |    -99.18 |
| UNPM               |    20.87 |    -86.87 |
| UJUR               |    20.70 |   -100.45 |
| USMX               |    29.82 |   -109.68 |
| UTAC               |    19.40 |    -99.20 |
| UTEO/SG21          |    19.74 |    -99.19 |
| UTON               |    19.03 |    -98.32 |
| UTUX               |    18.59 |    -95.07 |
| UXAL               |    19.52 |    -96.92 |
| UXUV               |    17.28 |    -94.15 |
| YESX               |    28.38 |   -108.92 |
| Zamora             |    19.99 |   -102.28 |

* TODO list 
  - [X] update journal.org to github
  - [X] Obtain relevant statistical parameters and graphs
    - [X] Average duration of events (and std)
    - [X] dispersion of latitude and longitude
  - [-] Plot positions of events in a map
    - [X] Add ID numbers to events
    - [ ] More aestetic improvements
    - [X] Add to paper
  - [X] Update table in paper
  - [-] Work in presentation
    - [X] General structure
    - [X] Work in individual sections
      - [X] Introduction
      - [X] Database
      - [X] Preliminary results
      - [X] Future Work
    - [X] Table(s) with GPS stations
    - [ ] TEC maps like Chelyabinsk paper
      - [ ] Add title, labels and other improvements
      - [ ] Deal with No data rows
      - [ ] Download and process with GPS Gopi the remaining events
      - [ ] Latitude vs time plots
    - [X] Get Kp index data
      - [X] Code to plot Kp index for desired dates
      - [X] Obtain graphs for meteors sample
    - [X] Correct typos in meteors data
    - [ ] Work in wavelet transforms
      - [ ] Study paper
      - [ ] Adapt code to our work
** TODO Documentos para ingreso al SNI
   - [ ] Publicaciones
   - [X] Documentación que pruebe que impartí clases en:
     - [X] Liceo
     - [X] ENES
* Codes
** Statistics of events parameters
+ Tangle with C-c C-v t
#+NAME: events_statistics
#+BEGIN_SRC python :eval no :tangle ./events_statistics.py

import numpy as np
from astropy.table import Table
import statistics as stats
import matplotlib.pyplot as plt

# Code goal: Extract basic statistics of events sample

# Step 1: Read data from table

tab_data = Table.read("meteors_database.tab", format="ascii")

duration = tab_data["dt"]
s_dur = tab_data["s_dt"]
lat = tab_data["Latitud"]
lon = tab_data["Longitud"]
s_lat = tab_data["sig_latitude"]
s_lon = tab_data["sig_lon"]

# Step 2: Obtain relevant statistics

## Mean duration

mean_duration = stats.mean(duration)
mean_s_lat = stats.mean(s_lat)
mean_s_lon = stats.mean(s_lon)

# Plot data in scatter plots or similar
plt.scatter(s_lon, s_lat, c="r")
plt.scatter(mean_s_lon, mean_s_lat, c="b")
plt.xlabel(r"$\sigma_{lon}$ (deg)")
plt.ylabel(r"$\sigma_{lat}$ (deg)")
plt.savefig("events_statistics.pdf")
#+END_SRC
** Plot Mexico map with events

#+NAME: plot_mex_map
#+BEGIN_SRC python :eval no :tangle ./plot_meteors.py

# Mexico map plotter
# The main idea of this program was taken from 
# https://towardsdatascience.com/mapping-with-matplotlib-pandas-geopandas-and-basemap-in-python-d11b57ab5dac
# By Ashwani Dhankhar 
# And the shape file for Mexico from CONABIO
# http://www.conabio.gob.mx/informacion/metadata/gis/destdv250k_2gw.xml?_xsl=/db/meadata/xsl/fgdc_html.xsl&_indent=no

import seaborn as sns
import numpy as np
import pandas as pd
import shapefile as shp
import matplotlib.pyplot as plt
from plotfullmap import plot_map
import argparse
from astropy.table import Table
import glob
import matplotlib.cm as cm


# set figure style
sns.set_style("whitegrid") 
sns.mpl.rc("figure", figsize=(10,6))

# Read shape file of Mexico map
sf = shp.Reader("map.shp")
plot_map(sf)


# Read meteors_database

f = Table.read("meteors_database.tab", format="ascii")

# plot positions plus uncertainties in the map

plt.errorbar(f["Longitud"], f["Latitud"], xerr=f["sig_lon"], yerr=f["sig_latitude"], fmt="bo", capsize=3)
# Offset of labels
x_off = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, -10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
y_off = [10, 10, -10, 10, -10, 10, 10, 10, 10, -10, 10, -10, 10, 10, 10, 10, -10, 10, 10, -10, 10, 10, 10, -10, 10, 10, 10, 10, 10, -10, 10, 10, 10, 10, 10]
for i in range(len(f["ID"])):
    plt.annotate(f["ID"][i], (f["Longitud"][i], f["Latitud"][i]), textcoords="offset points", color="w",
    xytext=(x_off[i], y_off[i]), ha="center", bbox=dict(boxstyle="round", pad=0.5, fc="b", alpha=0.7))
ax = plt.gca()
ax.set_aspect('equal', adjustable='box')

plt.savefig("meteors_map.pdf")

#+END_SRC
** Plot Mexico map with GPS stations
+ Use C-c ' to edit code 
#+NAME: plot_GPS_map
#+BEGIN_SRC python :eval no :tangle ./plot_stations.py
  # Mexico map plotter
  # The main idea of this program was taken from 
  # https://towardsdatascience.com/mapping-with-matplotlib-pandas-geopandas-and-basemap-in-python-d11b57ab5dac
  # By Ashwani Dhankhar 
  # And the shape file for Mexico from CONABIO
  # http://www.conabio.gob.mx/informacion/metadata/gis/destdv250k_2gw.xml?_xsl=/db/meadata/xsl/fgdc_html.xsl&_indent=no

  import seaborn as sns
  import numpy as np
  import pandas as pd
  import shapefile as shp
  import matplotlib.pyplot as plt
  from plotfullmap import plot_map
  import argparse
  from astropy.table import Table
  import glob
  import matplotlib.cm as cm

  # set figure style
  sns.set_style("whitegrid") 
  sns.mpl.rc("figure", figsize=(10,6))

  # Read shape file of Mexico map
  sf = shp.Reader("map.shp")
  plot_map(sf)

  # Read stations positions table

  stations_pos = Table.read("station_data.tab", format="ascii")

  # Plot stations positions

  plt.plot(stations_pos["Longitude"], stations_pos["Latitude"], "ro")
  for i in range(len(stations_pos["Site"])):
      plt.annotate(stations_pos["Site"][i], (stations_pos["Longitude"][i], stations_pos["Latitude"][i]),
		   textcoords="offset points", color="w", xytext=(5, 5), ha="center",
		   bbox=dict(boxstyle="round", pad=0.5, fc="b", alpha=0.7))

  ax = plt.gca()
  ax.set_aspect("equal", adjustable="box")
  plt.savefig("stations_map.pdf")
#+END_SRC
** Plot vTEC maps
+ Use C-c ' to edit code 
#+NAME: plot_vTEC_map
#+BEGIN_SRC python :eval no :tangle ./plot_vTEC.py

  # Mexico map plotter
  # The main idea of this program was taken from 
  # https://towardsdatascience.com/mapping-with-matplotlib-pandas-geopandas-and-basemap-in-python-d11b57ab5dac
  # By Ashwani Dhankhar 
  # And the shape file for Mexico from CONABIO
  # http://www.conabio.gob.mx/informacion/metadata/gis/destdv250k_2gw.xml?_xsl=/db/meadata/xsl/fgdc_html.xsl&_indent=no

  import seaborn as sns
  import numpy as np
  import pandas as pd
  import shapefile as shp
  import matplotlib.pyplot as plt
  from plotfullmap import plot_map
  import argparse
  from astropy.table import Table
  import glob
  import matplotlib.cm as cm
  import matplotlib.colors as colors
  from scipy.interpolate import interp1d
  from midpoint import MidpointNormalize



  parser = argparse.ArgumentParser(
      description=""" Choose a file to work""")


  parser.add_argument('--date', type=str, default='2000-01-01',
		      help='Choose date. Format: yyyy-mm-dd')



  cmd_args = parser.parse_args()
  date = cmd_args.date


  directory = "./data/"+date

  # set figure style
  sns.set_style("whitegrid") 
  sns.mpl.rc("figure", figsize=(10,6))

  # Read shape file of Mexico map
  sf = shp.Reader("map.shp")
  plot_map(sf)


  # Load RINEX capabilities

  rinex_files = glob.glob(directory+"/*.Cmn")
  std_files = glob.glob(directory+"/*.Std")
  load_dirs = [open(rinex_files[i], "r") for i in range(len(rinex_files))]
  load_std = [Table.read(std_files[i], format="ascii") for i in range(len(std_files))]

  # Load and plot event position

  load_meteor_pos = Table.read("meteors_database.tab", format="ascii")
  meteor_mask = load_meteor_pos["Fecha"] == date
  plt.plot(load_meteor_pos["Longitud"][meteor_mask], load_meteor_pos["Latitud"][meteor_mask], "ro")
  plt.annotate(date, (load_meteor_pos["Latitud"][meteor_mask], load_meteor_pos["Longitud"][meteor_mask]),
	       textcoords="offset points", color="w", xytext=(10, 10), ha="center", bbox=dict(boxstyle="round", pad=0.5, fc="r", alpha=0.7))

  # Plot vTEC map

  for f, g in zip(load_dirs, load_std):
      header = f.readline()
      h1, h2 = header.split(",")
      station = h2.split("\\")[-1][0:4]
      blank = f.readline()
      s_coords = f.readline()
      s_latitude, s_longitude, s_altitude = s_coords.split()
      blank = f.readline()
      data  = f.readlines()
      obs_tab = Table.read(data, format="ascii")
      std_time = g["col1"]
      std_TEC = g["col2"]
      mean_TEC_int = interp1d(std_time, std_TEC)
      cmn_time = obs_tab["Time"]
      mask = cmn_time < 0
      cmn_time[mask] = cmn_time[mask] + 24.
      mask2 = cmn_time < max(std_time)
      dTEC = obs_tab["Vtec"][mask2] - mean_TEC_int(cmn_time[mask2])
      norm = MidpointNormalize(midpoint=0)
      plt.plot(float(s_longitude)-360, float(s_latitude), "r*")
      plt.text(float(s_longitude)-360+0.5, float(s_latitude)-0.5, station.upper(),
	       bbox=dict(boxstyle='round', pad=0.5, fc='blue', alpha=1))

      plt.scatter(obs_tab["Lon"][mask2]-360, obs_tab["Lat"][mask2], s=1, c=dTEC, cmap="plasma",alpha=0.8, norm=norm)

  # Plot settings

  ax = plt.gca()
  ax.set_aspect('equal', adjustable='box')
  #plt.legend()
  cbar = plt.colorbar()
  cbar.set_label("vTEC (TECU)")

  plt.savefig(directory+"/"+date+"-GLM_map.pdf")

#+END_SRC
** Kp index
+ Use C-c ' to edit code 
#+NAME: Kp_index
#+BEGIN_SRC python :eval no :tangle ./Kp-index.py

  import numpy as np
  import matplotlib.pyplot as plt
  import argparse

  # Get and plot planetary K index for a determined set of dates

  parser = argparse.ArgumentParser(
	description=""" Choose a file to work""")


  parser.add_argument('--date', type=str, default='2000-01-01',
			help='Choose date. Format: yyyy-mm-dd')

  parser.add_argument('--datep', type=str, default='2000-01-01',
			help='Choose date. Format: yyyy-mm-dd')

  parser.add_argument('--datepp', type=str, default='2000-01-01',
			help='Choose date. Format: yyyy-mm-dd')


  parser.add_argument("--ftpfile", type=str, default="Q4", 
		      help="choose the file with the corresponding Kp index data")


  #Capture data from command line

  cmd_args = parser.parse_args()
  date = cmd_args.date
  datep = cmd_args.datep # Previous day to impact date
  datepp = cmd_args.datepp # 2 days before impact date
  year = date.split("-")[0]
  ftpfile = year+cmd_args.ftpfile+"_DGD.txt"

  # Read and load data from Kp index text file

  f = open(ftpfile, "r")

  ## Skip first 12 rows

  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()
  f.readline()

  ## Load data

  raw_data = f.readlines()

  # Select desired dates from the whole data

  kp = []

  for d in raw_data:
      k_date = d.split()[0:3]
      kdate = k_date[0]+"-"+ k_date[1]+"-"+k_date[2]
      if((kdate==date)|(kdate==datep)|(kdate==datepp)):
	 kp.append(d.split()[-8:])


  # Reshape array to be unidimensional

  Kp = np.array(kp).reshape(24,)

  # Convert array elements from strings to integers

  Kp = [int(k) for k in Kp]

  # Start plotting. The output will be a bar graph

  ## Set x coords

  x = np.arange(len(Kp))

  ## Plot bar graph
  bar = plt.bar(x, Kp, width=0.5)

  ## Set graph limits
  plt.xlim(-0.5, 24)
  plt.ylim(0, 9)

  ## Set ticks in both axis

  plt.xticks([0, 7.5, 15.5], [datepp, datep, date])
  plt.yticks(np.arange(10))

  ## Set vertical lines at the beginning of each day (00:00 UTC)

  plt.axvline(x=7.5, ls="--", c="k")
  plt.axvline(x=15.5, ls="--", c="k")


  ## Set different color to bars according to Kp index value

  for i in range(24):
      if Kp[i]==4:
	 bar[i].set_color("y")
      elif Kp[i] > 4:
	 bar[i].set_color("r")
      else:
	 bar[i].set_color("g")

  ## Set label to axis and graph title

  plt.ylabel("Kp Index")
  plt.title("Estimated Planetary K Index (3 hours data). Begin {} UTC".format(datepp))

  # Save graph

  plt.savefig("./Kp index/"+date+" Kp index.pdf")

#+END_SRC
